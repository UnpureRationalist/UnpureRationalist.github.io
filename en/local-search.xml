<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Some Missing Knowledge Points of C Programming Language for C++ Programmer</title>
    <link href="/en/2023/05/01/Some-Missing-Knowledge-Points-of-C-Programming-Language-for-C-Programmer/"/>
    <url>/en/2023/05/01/Some-Missing-Knowledge-Points-of-C-Programming-Language-for-C-Programmer/</url>
    
    <content type="html"><![CDATA[<blockquote><p>As a programmer with C++ as the first programming language, I havebeen unfamiliar with some important features and idioms of C programminglanguage. By reading "The C Programming Language", some missingknowledge points are sorted out as follows.</p></blockquote><h2 id="extern-declaration">1. extern declaration</h2><p>The keyword <code>extern</code> is used to declare externalvariables. And there are differences between declaration anddefinition:</p><ul><li>definition: It means creating variables or allocating memoryunits.</li><li>declaration: It just describes the nature of the variable, but doesnot allocate memory.</li></ul><p>When the definition of an external variable appears before thefunction that uses it, the <code>extern</code> declaration can beomitted; otherwise, there must be an <code>extern</code> declaration(for example: involving multiple source files).</p><p>Example:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> n = <span class="hljs-number">1</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> n;<span class="hljs-meta"># extern declaration</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, n);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>Modifying an external variable or function with the<code>static</code> keyword can limit the scope of the object declaredlater to the rest of the compiled file, and other files cannot accessthe object.</p><p>The keyword <code>static</code> can also be used to declare internalvariables: variables that can only be used within a function but alwaysoccupy memory space.</p><h2 id="macro">2. macro</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// cancel the definition of a macro</span><br><span class="hljs-meta">#<span class="hljs-keyword">undef</span> getchar</span><br><br><br><span class="hljs-comment">// the macro used to debug</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> dprint(expr) printf(#expr <span class="hljs-string">&quot; = %g\n&quot;</span>, expr)</span><br><br>dprint(x/y);<br><br><span class="hljs-comment">// the macro will expand to:</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;x/y&quot;</span> <span class="hljs-string">&quot; = %g\n&quot;</span>, x/y);<br><br><br><span class="hljs-comment">// preprocessor operator ##</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> paste(front, end) front ## end</span><br><br><span class="hljs-comment">// the result of the macro call paste(name, 1) will create the symbol name1</span><br></code></pre></td></tr></table></figure><p>conditional include</p><p>example 1：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">if</span> !defined(HDR)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HDR</span><br><br><span class="hljs-comment">/* hdr.h */</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure><p>which is equal to:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> HDR</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HDR</span><br><br><span class="hljs-comment">/* code here */</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br></code></pre></td></tr></table></figure><p>example 2：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">if</span> SYSTEM == SYSV</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HDR <span class="hljs-string">&quot;sysv.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">elif</span> SYSTEM == BSD:</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HDR <span class="hljs-string">&quot;bsd.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">elif</span> SYSTEM == MSDOS:</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HDR <span class="hljs-string">&quot;msdos.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">else</span>:</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HDR <span class="hljs-string">&quot;default.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> HDR</span><br></code></pre></td></tr></table></figure><h2 id="union">3. union</h2><p><code>union</code>: Variables that hold objects of different typesand lengths at different times.</p><p>example：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">u_tag</span> &#123;</span><br>    <span class="hljs-type">int</span> ival;<br>    <span class="hljs-type">float</span> fval;<br>    <span class="hljs-type">char</span> *sval;<br>&#125; u;<br></code></pre></td></tr></table></figure><p><code>union</code> is actually <code>struct</code>, all its membershave an offset of 0 relative to the base address, this<code>struct</code> space should be large enough to accommodate thewidest member, and its alignment should be suitable for<code>members of all types in a union</code>.</p><h2 id="bit-field">4. bit-field</h2><p>example：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// define a bit field, the number after &#x27;:&#x27; indicates the width of the field</span><br><span class="hljs-comment">// bit-fields are similar to small integers and can appear in arithmetic expressions</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> &#123;</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> is_keyword : <span class="hljs-number">1</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> is_extern : <span class="hljs-number">1</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> is_static : <span class="hljs-number">1</span>;<br>&#125; flags;<br><br><span class="hljs-comment">// set value of bit-field</span><br>flags.is_extern = flags.is_static = <span class="hljs-number">1</span>;<br>flags.is_extern = flags.is_static = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">// test value of bit-field</span><br><span class="hljs-keyword">if</span> (flags.is_extern == <span class="hljs-number">0</span> &amp;&amp; flags.is_static ==<span class="hljs-number">0</span>)<br>    ...<br></code></pre></td></tr></table></figure><p>Bit-field is not an array and has no address, the <code>&amp;</code>operator cannot be used on it.</p><h2 id="file-operation">5. File Operation</h2><p>example：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c">FILE *fp = fopen(name, mode);<span class="hljs-comment">// open the file in the specified mode; failure returns NULL</span><br>fclose(fp);<span class="hljs-comment">// close the file</span><br><br><span class="hljs-comment">// return the next character from the file; EOF if end-of-file or error occurs</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">getc</span><span class="hljs-params">(FILE *fp)</span>;<br><br><span class="hljs-comment">// write character c to the file pointed to by fp and return the character written</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">putc</span><span class="hljs-params">(<span class="hljs-type">int</span> c, FILE *fp)</span>;<br><br><span class="hljs-comment">// formatted input and output to files</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">fscanf</span><span class="hljs-params">(FILE *fp, <span class="hljs-type">char</span> *format, ...)</span>;<br><span class="hljs-type">int</span> <span class="hljs-title function_">fprintf</span><span class="hljs-params">(FILE *fp, <span class="hljs-type">char</span> *format, ...)</span>;<br><br><span class="hljs-comment">// judge errors</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">ferror</span><span class="hljs-params">(FILE *fp)</span>;<span class="hljs-comment">// 如果流 fp 中出现错误，则返回一个非 0 值</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">feof</span><span class="hljs-params">(FILE *fp)</span>;<span class="hljs-comment">// 如果文件到达文件结尾，返回一个非 0 值</span><br><br><span class="hljs-comment">// line input and line output</span><br><span class="hljs-comment">// Read the next input line (including &#x27;\n&#x27;) from the file pointed to by fp and store it in line. Read at most maxline-1 characters. Normal end returns line; error returns NULL</span><br><span class="hljs-type">char</span> *<span class="hljs-title function_">fgets</span><span class="hljs-params">(<span class="hljs-type">char</span> *line, <span class="hljs-type">int</span> maxline, FILE *fp)</span>;<br><span class="hljs-comment">// Write line to the file pointed to by fp. Returns EOF on error; otherwise returns a non-negative value.</span><br><span class="hljs-type">char</span> *<span class="hljs-title function_">fputs</span><span class="hljs-params">(<span class="hljs-type">char</span> *line, FILE *fp)</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C</category>
      
    </categories>
    
    
    <tags>
      
      <tag>extern</tag>
      
      <tag>define</tag>
      
      <tag>union</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Evaluate Dataset and Sample Difficulty</title>
    <link href="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/"/>
    <url>/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/</url>
    
    <content type="html"><![CDATA[<p>This article shares papers on evaluating datasets and sampledifficulty, specifically:</p><ul><li><a href="https://arxiv.org/pdf/2002.10689">A Theory of UsableInformation Under Computational Constraints</a></li><li><ahref="https://proceedings.mlr.press/v162/ethayarajh22a/ethayarajh22a.pdf">UnderstandingDataset Difficulty with <spanclass="math inline">\(\mathcal{V}\)</span>-Usable Information</a></li></ul><p>The main content comes from the sharing of the group meeting, theslides is <a href="Dataset%20&amp;%20Example%20Difficulty.pdf">righthere</a>.</p><h2 id="shannon-mutual-information">1. Shannon Mutual Information</h2><p>In probability theory and information theory, the mutual information(Mutual Information, MI) of two random variables measures the degree ofmutual dependence between the two variables. Specifically, for tworandom variables, MI is the "information" (usually in bits) of onerandom variable that is reduced by knowing the other.</p><p>The mutual information of discrete random variables X and Y can becalculated as:</p><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312222959237.png" class="" title="Shannon Mutual Information Definition of Discrete Variables"></center><p>where p(x, y) is the joint probability mass function of <em>X</em>and <em>Y</em>, and p(x) and p(y) are the marginal probability massfunctions of <em>X</em> and <em>Y</em>, respectively.</p><p>Mutual information can be equivalently expressed as:</p><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312223006884.png" class=""></center><p>However, in the context of machine learning, Shannon mutualinformation conflicts with some of our current empirical understanding,such as the example shown in the picture below:</p><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312223134757.png" class="" title="The Shannon mutual information of plaintext, ciphertext and label is equal"></center><p>Under Shannon's mutual information theory, <em>the mutual informationof the plaintext and the label</em> is equal to the <em>mutualinformation of the ciphertext and the label</em>. However, for ushumans, the label can be easily identified from the plaintext; it cannotbe judged from the ciphertext. That is, as shown in the figurebelow:</p><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312223458019.png" class=""></center><p>To resolve this conflict, the authors propose a new concept:considering mutual information under computational constraints.</p><h2id="extended-definition-of-shannon-mutual-informationmathcalv-information">2.Extended Definition of Shannon Mutual Information——<spanclass="math inline">\(\mathcal{V}\)</span>-Information</h2><p>First, the author introduces three concepts:</p><ol type="1"><li><p><strong>predictive family</strong></p><p>Let <span class="math inline">\(\Omega=\{f: \mathcal{X}\cup\{\varnothing\} \rightarrow \mathcal{P}(\mathcal{Y})\}\)</span>. Wesay that <span class="math inline">\(\mathcal{V} \subseteq\Omega\)</span> is a predictive family if it satisfies <spanclass="math display">\[\forall f \in \mathcal{V}, \forall P \in \operatorname{range}(f), \quad\exists f^{\prime} \in \mathcal{V}, \quad \text { s.t. } \quad \forall x\in \mathcal{X}, f^{\prime}[x]=P, f^{\prime}[\varnothing]=P\]</span></p></li><li><p><strong>predictive conditional <spanclass="math inline">\(\mathcal{V}\)</span>-entropy</strong></p><p>Let <span class="math inline">\(X, Y\)</span> be two random variablestaking values in <span class="math inline">\(\mathcal{X} \times\mathcal{Y}\)</span>, and <spanclass="math inline">\(\mathcal{V}\)</span> be a predictive family. Thenthe predictive conditional <spanclass="math inline">\(\mathcal{V}\)</span>-entropy is defined as <spanclass="math display">\[\begin{aligned}H_{\mathcal{V}}(Y \mid X) &amp; =\inf _{f \in \mathcal{V}}\mathbb{E}_{x, y \sim X, Y}[-\log f[x](y)] \\H_{\mathcal{V}}(Y \mid \varnothing) &amp; =\inf _{f \in \mathcal{V}}\mathbb{E}_{y \sim Y}[-\log f[\varnothing](y)]\end{aligned}\]</span> We additionally call <spanclass="math inline">\(H_{\mathcal{V}}(Y \mid \varnothing)\)</span> the<span class="math inline">\(\mathcal{V}\)</span>-entropy, and alsodenote it as <span class="math inline">\(H_{\mathcal{V}}(Y)\)</span>.</p></li><li><p><strong>predictive conditional <spanclass="math inline">\(\mathcal{V}\)</span>-information</strong></p><p>Let <span class="math inline">\(X, Y\)</span> be two random variablestaking values in <span class="math inline">\(\mathcal{X} \times\mathcal{Y}\)</span>, and <spanclass="math inline">\(\mathcal{V}\)</span> be a predictive family. Thepredictive <span class="math inline">\(\mathcal{V}\)</span>-informationfrom <span class="math inline">\(X\)</span> to <spanclass="math inline">\(Y\)</span> is defined as <spanclass="math display">\[I_{\mathcal{V}}(X \rightarrow Y)=H_{\mathcal{V}}(Y \mid\varnothing)-H_{\mathcal{V}}(Y \mid X)\]</span></p></li></ol><p><span class="math inline">\(\mathcal{V}\)</span>-information has thefollowing properties:</p><ul><li><p>basic properties</p><p>Let <span class="math inline">\(Y\)</span> and <spanclass="math inline">\(X\)</span> be any random variables on <spanclass="math inline">\(\mathcal{Y}\)</span> and <spanclass="math inline">\(\mathcal{X}\)</span>, and <spanclass="math inline">\(\mathcal{V}\)</span> and <spanclass="math inline">\(\mathcal{U}\)</span> be any predictive families,then we have</p><ul><li>Monotonicity: If <span class="math inline">\(\mathcal{V} \subseteq\mathcal{U}\)</span>, then <spanclass="math inline">\(H_{\mathcal{V}}(Y) \geq H_{\mathcal{U}}(Y),H_{\mathcal{V}}(Y \mid X) \geq H_{\mathcal{U}}(Y \mid X)\)</span>.</li><li>Non-Negativity: <span class="math inline">\(I_{\mathcal{V}}(X\rightarrow Y) \geq 0\)</span>.</li><li>Independence: If <span class="math inline">\(X\)</span> isindependent of <span class="math inline">\(Y, I_{\mathcal{V}}(X\rightarrow Y)=I_{\mathcal{V}}(Y \rightarrow X)=0\)</span>.</li></ul></li><li><p>Data processing inequalities (different from Shannon mutualinformation)</p><ul><li><strong>Shannon Mutual Information</strong>: Letting <spanclass="math inline">\(t: \mathcal{X} \rightarrow \mathcal{X}\)</span> beany function, <span class="math inline">\(t(X)\)</span> cannot havehigher mutual information with <span class="math inline">\(Y\)</span>than <span class="math inline">\(X: I(t(X) ; Y) \leq I(X ;Y)\)</span>.</li><li><strong><spanclass="math inline">\(\mathcal{V}\)</span>-Information</strong>:Denoting <span class="math inline">\(t\)</span> as the decryptionalgorithm and <span class="math inline">\(\mathcal{V}\)</span> as aclass of natural language processing functions, we have that: <spanclass="math inline">\(I_{\mathcal{V}}(t(X) \rightarrowY)&gt;I_{\mathcal{V}}(X \rightarrow Y) \approx 0\)</span>.</li></ul></li><li><p>Asymmetry (different from Shannon mutual information)</p><p>If <span class="math inline">\(\mathcal{V}\)</span> contains allpolynomial-time computable functions, then <spanclass="math inline">\(I_{\mathcal{V}}(X \rightarrow h(X)) \ggI_{\mathcal{V}}(h(X) \rightarrow X)\)</span> , where <spanclass="math inline">\(h: \mathcal{X} \rightarrow\mathcal{Y}\)</span>.</p></li></ul><p>According to the nature of <spanclass="math inline">\(\mathcal{V}\)</span>-information, we canreasonably explain the problems shown in the above example, thus:</p><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312225113429.png" class=""></center><p><br></p><p>The above is a strict definition of <spanclass="math inline">\(\mathcal{V}\)</span>-Information, but in machinelearning, we don't have a real distribution, but only a finite size dataset sampled from the distribution. Next, the authors address how toestimate <span class="math inline">\(\mathcal{V}\)</span>-Information ona finite-sized dataset:</p><p>Let <span class="math inline">\(X, Y\)</span> be two random variablestaking values in <span class="math inline">\(\mathcal{X},\mathcal{Y}\)</span> and <spanclass="math inline">\(\mathcal{D}=\left\{\left(x_i,y_i\right)\right\}_{i=1}^N \sim X, Y\)</span> denotes the set of samplesdrawn from the joint distribution over <spanclass="math inline">\(\mathcal{X}\)</span> and <spanclass="math inline">\(\mathcal{Y} . \mathcal{V}\)</span> is a predictivefamily. The empirical <spanclass="math inline">\(\mathcal{V}\)</span>-information (under <spanclass="math inline">\(\mathcal{D}\)</span> ) is the following <spanclass="math inline">\(\mathcal{V}\)</span>-information under theempirical distribution defined via <spanclass="math inline">\(\mathcal{D}\)</span> : <spanclass="math display">\[\hat{I}_{\mathcal{V}}(X \rightarrow Y ; \mathcal{D})=\inf _{f \in\mathcal{V}} \frac{1}{|\mathcal{D}|} \sum_{y_i \in \mathcal{D}} \log\frac{1}{f[\varnothing]\left(y_i\right)}-\inf _{f \in \mathcal{V}}\frac{1}{|\mathcal{D}|} \sum_{x_i, y_i \in \mathcal{D}} \log\frac{1}{f\left[x_i\right]\left(y_i\right)}\]</span> Then we have the following PAC bound over the empirical <spanclass="math inline">\(\mathcal{V}\)</span>-information:</p><p>Assume <span class="math inline">\(\forall f \in \mathcal{V}, x \in\mathcal{X}, y \in \mathcal{Y}, \log f[x](y) \in[-B, B]\)</span>. Thenfor any <span class="math inline">\(\delta \in(0,0.5)\)</span>, withprobability at least <span class="math inline">\(1-2 \delta\)</span>, wehave: <span class="math display">\[\left|I_{\mathcal{V}}(X \rightarrow Y)-\hat{I}_{\mathcal{V}}(X\rightarrow Y ; \mathcal{D})\right| \leq 4\mathfrak{R}_{|\mathcal{D}|}\left(\mathcal{G}_{\mathcal{V}}\right)+2 B\sqrt{\frac{2 \log \frac{1}{\delta}}{|\mathcal{D}|}}\]</span> where we define the function family <spanclass="math inline">\(\mathcal{G}_{\mathcal{V}}=\{g \mid g(x, y)=\logf[x](y), f \in \mathcal{V}\}\)</span>, and <spanclass="math inline">\(\mathfrak{R}_N(\mathcal{G})\)</span> denotes theRademacher complexity of <spanclass="math inline">\(\mathcal{G}\)</span> with sample number <spanclass="math inline">\(N\)</span>.</p><h2id="evaluate-dataset-and-sample-difficulty-using-mathcalv-information">3.Evaluate Dataset and Sample Difficulty using <spanclass="math inline">\(\mathcal{V}\)</span>-Information</h2><p>Using the <spanclass="math inline">\(\mathcal{V}\)</span>-Information tool introducedabove and conducting experiments, some interesting phenomena can befound.</p><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312225802256.png" class=""></center><ul><li>The accuracy and <spanclass="math inline">\(\mathcal{V}\)</span>-Usable Information of thelarge model are higher, because extracting more information makesrecognition easier</li><li><span class="math inline">\(\mathcal{V}\)</span>-Information is moresensitive to over-fitting compared to accuracy</li></ul><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312225854120.png" class=""></center><ul><li>Provides a way to measure the difficulty of different datasets</li></ul><p>Then, a method for evaluating sample point <spanclass="math inline">\(\mathcal{V}\)</span>-Information (Pointwise <spanclass="math inline">\(\mathcal{V}\)</span>-Information, PVI) isintroduced:</p><p>Given random variables <span class="math inline">\(X, Y\)</span> anda predictive family <span class="math inline">\(\mathcal{V}\)</span>,the pointwise <spanclass="math inline">\(\mathcal{V}\)</span>-information (PVI) of aninstance <span class="math inline">\((x, y)\)</span> is <spanclass="math display">\[\operatorname{PVI}(x \rightarrow y)=-\log _2 g[\varnothing](y)+\log _2g^{\prime}[x](y)\]</span> where <span class="math inline">\(g \in \mathcal{V}\)</span>s.t. <span class="math inline">\(\mathbb{E}[-\logg[\varnothing](Y)]=H_{\mathcal{V}}(Y)\)</span> and <spanclass="math inline">\(g^{\prime} \in \mathcal{V}\)</span> s.t. <spanclass="math inline">\(\mathbb{E}\left[-\logg^{\prime}[X](Y)\right]=H_{\mathcal{V}}(Y \mid X)\)</span>.</p><p>PVI is to <spanclass="math inline">\(\mathcal{V}\)</span>-information what PMI is toShannon information: <span class="math display">\[\begin{aligned}I(X ; Y) &amp; =\mathbb{E}_{x, y \sim P(X, Y)}[\operatorname{PMI}(x, y)]\\I_{\mathcal{V}}(X \rightarrow Y) &amp; =\mathbb{E}_{x, y \sim P(X,Y)}[\operatorname{PVI}(x \rightarrow y)]\end{aligned}\]</span></p><p>The complete algorithm flow is as follows:</p><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312230205356.png" class=""></center><p><br></p><p>Then, using PVI to experiment, we can also observe some interestingphenomena:</p><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312230304658.png" class=""></center><ul><li>There are many labeling errors in the sample with the lowestPVI</li></ul><center><img src="/en/2023/03/12/Evaluate%20Dataset%20and%20Sample%20Difficulty/image-20230312230341812.png" class=""></center><ul><li>The PVI threshold for the model to correctly classify samples isaround 0.5</li></ul><p><br></p><p>In addition, the original paper also showed some interestingexperimental phenomena, which will not be repeated here, please refer tothe original paper for details.</p>]]></content>
    
    
    <categories>
      
      <category>Deep Learning</category>
      
      <category>Read Papers</category>
      
    </categories>
    
    
    <tags>
      
      <tag>dataset &amp; example difficulty</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Install QEMU on Ubuntu 22.04</title>
    <link href="/en/2023/03/03/Install%20QEMU%20on%20Ubuntu%2022.04/"/>
    <url>/en/2023/03/03/Install%20QEMU%20on%20Ubuntu%2022.04/</url>
    
    <content type="html"><![CDATA[<p>The <a href="https://www.qemu.org/download/">QEMU</a> officialwebsite has provided tutorial on how to install it. According to thewebsite, we just need to execute <code>sudo apt-get install qemu</code>on Ubuntu to install QEMU. However, I got an error and failed to fix it.So I decided to install QEMU from the source code. This blog will takeQEMU 7.2.0 version as an example to introduce the installationprocess.</p><ol type="1"><li><p>Download the source code and unzip it</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">wget https://download.qemu.org/qemu-7.2.0.tar.xz</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">tar xvJf qemu-7.2.0.tar.xz</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> qemu-7.2.0</span><br></code></pre></td></tr></table></figure></li><li><p>Preprocessing before compilation</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">./configure</span><br></code></pre></td></tr></table></figure></li><li><p>Handle error</p><p>After executing the command above, an error like this may bereported:</p><center><img src="/en/2023/03/03/Install%20QEMU%20on%20Ubuntu%2022.04/image-20230303200128068.png" class=""></center><p>The reason for the error is that the system lacks the dependenciesrequired by QEMU. Run the following command to install dependencies:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt-get install ninja-build</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt-get install zlib1g zlib1g-dev</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt-get install libglib2.0-dev</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt-get install libpixman-1-dev</span><br></code></pre></td></tr></table></figure><p>run the command again:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">./configure</span><br></code></pre></td></tr></table></figure></li><li><p>Use make to compile the source code</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">make</span><br></code></pre></td></tr></table></figure><p>After typing the command above, the compilation process begins andwill last for some time. Please wait patiently.</p></li><li><p>Install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo make install</span><br></code></pre></td></tr></table></figure></li><li><p>Verify that the installation is successful</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">qemu-</span><br></code></pre></td></tr></table></figure><p>Enter <code>qemu-</code> and press TAB twice. If the output similarto the following appears, the installation is successful.</p><center><img src="/en/2023/03/03/Install%20QEMU%20on%20Ubuntu%2022.04/image-20230303214138504.png" class="" title="image-20230303214138504"></center></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>QEMU</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo blog cannot display pictures solution</title>
    <link href="/en/2023/02/23/Hexo%20blog%20cannot%20display%20pictures%20solution/"/>
    <url>/en/2023/02/23/Hexo%20blog%20cannot%20display%20pictures%20solution/</url>
    
    <content type="html"><![CDATA[<p>Hexo provides many ways to <ahref="https://hexo.io/docs/asset-folders.html#Embedding-an-image-using-markdown">insertpictures</a> in blog, which can be divided into 2 categories bysyntax:</p><ol type="1"><li><p>syntax natively supported by Markdown</p><p><code>![image description](image path)</code></p><p>Where, the image path cannot use an absolute path in the localsystem, for example: <code>C:/Users/admin/Pictures/a.jpg</code> . Thisis because Hexo cannot parse images correctly when generating static webpages, resulting in images not being displayed properly on the webpage.</p><p>The correct image path has the following two forms:</p><ul><li><p>Relative to the blog's root directory: <code>/imgs/a.jpg</code> .To use this method, you need to create a new <code>imgs</code> folderunder the <code>source</code> directory of the blog, and store theimages used in the article in the <code>imgs</code> folder.</p><p>For example, using the syntax of <code>/imgs/0_0.jpg</code>, thefollowing image can be displayed:</p></li></ul><p><img src="/imgs/0_0.jpg" /></p><ul><li><p>Relative path relative to a blog post:<code>./article_1/a.jpg</code> . To use this method, you need to set the<code>post_asset_folder</code> option to <code>true</code> in the Hexoconfiguration file <code>_config.yaml</code>. Then use<code>hexo new xxx</code> to create a new article, Hexo will create afolder with the same name as the article under the<code>source/_posts</code> directory, and then put the pictures that thearticle needs in this folder, and use the relative path to reference.</p><p>For example, using the syntax<code>Hexo blog cannot display pictures solution/0_1.jpg</code>, thefollowing pictures can be displayed:</p><img src="/en/2023/02/23/Hexo%20blog%20cannot%20display%20pictures%20solution/0_1.jpg" class=""></li></ul></li><li><p>Hexo-specific asset_img tag syntax</p><p>The image reference method recommended by Hexo is as follows:</p><p><code>&#123;% asset_img example.jpg This is an example image %&#125;</code></p><p>However, this syntax cannot display pictures normally in the Markdowneditor, and it will affect our viewing of article content in the editor.Personally, I do not recommend this method.</p></li></ol><p>After my own exploration, I got the following more useful solution,which can display images correctly in both the Hexo blog and theMarkdown editor.</p><p>First, set the <code>post_asset_folder</code> option to<code>true</code> in <code>_config.yaml</code> according to the officialHexo documentation. Then, install the plugin<code>hexo-image-link</code>, the installation command is:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-image-link --save<br></code></pre></td></tr></table></figure><p>If the <code>hexo-asset-img</code> plugin has been installed, itneeds to be uninstalled:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm uninstall --save hexo-asset-img<br></code></pre></td></tr></table></figure><p>Then, configure the Markdown editor Typora as follows:</p><img src="/en/2023/02/23/Hexo%20blog%20cannot%20display%20pictures%20solution/image-20230223101720679.png" class="" title="Typora 配置"><p>After the configuration is complete, when pasting a picture inTypora, Typora will automatically save the picture in a directory withthe same name as the file name, and use a relative path to reference thepicture in Markdown. In this way, we can see pictures in Hexo blog andTypora at the same time.</p>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Build a personal blog with Hexo and Nginx(GitHub Pages)</title>
    <link href="/en/2023/02/18/Build%20a%20personal%20blog/"/>
    <url>/en/2023/02/18/Build%20a%20personal%20blog/</url>
    
    <content type="html"><![CDATA[<p>This article introduces the main steps to build a personal blog usingHexo and Nginx (or GitHub Pages).</p><p>Before the text begins, let me introduce the functions of the toolsmentioned above:</p><ul><li><a href="https://nginx.org/en/">Nginx</a>：Acts as a web server. Ina personal blog, its main function is to provide HTTP or HTTPS serviceson the server so that users can access your blog site throughInternet.</li><li><a href="https://pages.github.com/">GitHub Pages</a>：When there isno personal cloud server, using GitHub Pages can also achieve thepurpose of building a personal blog. Specifically, GitHub Pages is aspecial GitHub repository where you can put some HTML, CSS, and JS filesin this repository to build a personal website.</li><li><a href="https://hexo.io/zh-cn/">Hexo</a>：Hexo is a static blogframework, which can be used to build a blog website, allowing users tofocus on blog content without being familiar with front-end content suchas CSS and Javascript. Using official and many open source themesprovided by the authors, you can quickly build beautiful web pages, andblog content can be written in Markdown.</li></ul><p>Next, the specific procedure are introduced.</p><h2 id="install-node.js-locally">1. Install Node.js locally</h2><p>Node.js official website is: https://nodejs.org/en/download/, openthe link, and select the appropriate installation file to downloadaccording to your local environment. Select the binary installer filefor Windows and Mac, and just click Next to install.</p><p>The installation on Linux is a little more complicated. The followingtwo installation methods are recommended, and you can choose one ofthem:</p><ul><li>Compile and install from source code without configuring bash, butcompiling takes time, <ahref="https://cloud.tencent.com/developer/article/1938607">reference</a></li><li>Download and install the binary file, you need to configure the bashenvironment, <ahref="https://cloud.tencent.com/developer/article/1772306">reference</a></li></ul><p>After the installation is complete, enter the following command inthe terminal:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm -v<br>$ node -v<br></code></pre></td></tr></table></figure><p>If there is an output version number, the installation issuccessful.</p><h2 id="install-hexo-locally-and-initialize-the-blog-environment">2.Install Hexo locally and initialize the blog environment</h2><p>Hexo installation command can be referred from [official website](https://hexo.io/), as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-cli -g<br>$ hexo init blog<br>$ <span class="hljs-built_in">cd</span> blog<br>$ npm install<br>$ hexo server<br></code></pre></td></tr></table></figure><p>For more information about Hexo, please refer to the officialdocumentation: <a href="https://hexo.io/docs/">Documents | Hexo</a>.</p><p>In order to make your blog site more in line with your aesthetics,you can choose a suitable theme <a href="https://hexo.io/themes/">Themes| Hexo</a>. This blog site uses Fluid, and its GitHub repository is: <ahref="https%20://github.com/fluid-dev/hexo-theme-fluid">fluid-dev/hexo-theme-fluid:A Material Design-style Hexo theme/ An elegant Material-Design theme forHexo (github.com)</a>, the official document address is: <ahref="https://hexo.fluid-dev.%20com/docs/guide/">Configuration Guide|Hexo Fluid User Manual (fluid-dev.com)</a>.</p><p>Read the official Hexo documentation and the official documentationof the theme you choose carefully, configure the yml file according toyour preferences, and half of the way to build a personal blog iscompleted.</p><p>Next, the problem we need to solve is: how to allow the majority ofusers on the Internet to visit your blog site?</p><p>Sections 3 and 4 provide two methods, which can be selected accordingto your specific situation.</p><h2 id="create-a-github-pages-repository">3. Create a GitHub Pagesrepository</h2><p>First, create a repository on GitHub. The naming of this repositoryis a bit particular, and the examples are as follows:</p><p>My GitHub home page address is: https://github.com/UnpureRationalist, where <code>UnpureRationalist</code> represents my username.</p><p>Open GitHub and select the option to create a repository, name therepository <code>username.github.io</code>, for example, my repositoryis named: <code>UnpureRationalist.github.io</code>, and set therepository to be publicly visible.</p><p>Then, upload a file named <code>index.html</code> in the repository,the content of the reference file is as follows:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Example<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello World.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Enter the link <code>username.github.io</code> in the browser, suchas my blog address: <code>UnpureRationalist.github.io</code>, and thenthe browser can display the contents of the <code>index.html</code> file(may need to wait for a while ).</p><p>Using this repository, we can allow other users to visit our blogsite.</p><h2 id="install-nginx-on-the-server">4. Install Nginx on the server</h2><p>For users who own a personal cloud server, they can directly installthe Nginx service on the personal server and build a personal blog ontheir own server.</p><p>First, we need to install Nginx on the server. Here we take theUbuntu as an example. The steps are as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt update<br>$ sudo apt install nginx<br>$ sudo systemectl <span class="hljs-built_in">enable</span> nginx<span class="hljs-comment"># set nginx to start on boot</span><br>$ sudo systemctl start nginx<span class="hljs-comment"># start nginx service</span><br></code></pre></td></tr></table></figure><p>Note that in order for Nginx to work normally, port 80 or/and 443needs to be opened in the security group settings of the server so thatthe HTTP or/and HTTPS service can work normally. For details, refer tothe server provider you use.</p><p>If you want to use HTTPS service, you need to configure Nginx. Fordetails, refer to the link:https://cloud.tencent.com/document/product/400/35244.</p><h2 id="configure-hexo-for-automatic-deployment">5. Configure Hexo forautomatic deployment</h2><p>After the above steps, we have a directory for storing personal blogslocally; we have a directory that public network users can access in thecloud. Therefore, we only need to use tools such as git or scp to uploadall the files and folders in the public directory generated by Hexo tothe GitHub repository or the root directory of the web server. However,it is cumbersome to do these operations manually, we can use thefunctions provided by Hexo to implement a command deployment. Fordetails, refer to the link: <ahref="https://hexo.io/docs/one-command-deployment#content-inner">One-CommandDeployment | Hexo</a>.</p><p>Specifically, make appropriate configurations in the<code>_config.yml</code> configuration file, and then run the followingcommand to deploy your personal blog to the cloud:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure><p>However, in my actual use, I found that the one-command deploymentfunction is not very easy to use, and an error will be reported whendeploying to the cloud server. Therefore, I use the functionalityprovided by Hexo to deploy to GitHub Pages; for the server, I use theunpretentious <code>scp</code> command for manual synchronization. Ifreaders have a better automatic deployment method, welcome to exchangeand discuss.</p>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/en/2023/02/18/hello-world/"/>
    <url>/en/2023/02/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="test-formual">Test formual</h2><p><span class="math display">\[E=mc^2\]</span></p><p><span class="math display">\[\sigma(z_i) = \frac{e^{z_{i}}}{\sum_{j=1}^K e^{z_{j}}} \ \ \ for\i=1,2,\dots,K\]</span></p><p><span class="math display">\[L_{\delta}=    \left\{\begin{matrix}        \frac{1}{2}(y - \hat{y})^{2} &amp; if \left | (y -\hat{y})  \right | &lt; \delta\\        \delta ((y - \hat{y}) - \frac1 2 \delta) &amp; otherwise    \end{matrix}\right.\]</span></p><p><span class="math display">\[\epsilon \sim \mathcal{N}(0, \textbf{I})\]</span></p><p><span class="math display">\[\vec{z} \sim \mathcal{N}(\vec{\mu}, \sigma^2 \textbf{I})\]</span></p><p><span class="math display">\[\sum_{i=1}^{D}|x_i-y_i|\]</span></p><p><span class="math display">\[Accuracy = \frac{TP+TN}{TP+TN+FP+FN}\]</span></p><p><span class="math display">\[Precision = \frac{TP}{TP+FP}\]</span></p><p><span class="math display">\[Recall = \frac{TP}{TP+FN}\]</span></p><p><span class="math display">\[F1 = \frac{2*Precision*Recall}{Precision+Recall} =\frac{2*TP}{2*TP+FP+FN}\]</span></p><h2 id="test-code">Test code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> net<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> face_alignment <span class="hljs-keyword">import</span> align<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><br>adaface_models = &#123;<br>    <span class="hljs-string">&#x27;ir_50&#x27;</span>:<span class="hljs-string">&quot;pretrained/adaface_ir50_ms1mv2.ckpt&quot;</span>,<br>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">load_pretrained_model</span>(<span class="hljs-params">architecture=<span class="hljs-string">&#x27;ir_50&#x27;</span></span>):<br>    <span class="hljs-comment"># load model and pretrained statedict</span><br>    <span class="hljs-keyword">assert</span> architecture <span class="hljs-keyword">in</span> adaface_models.keys()<br>    model = net.build_model(architecture)<br>    statedict = torch.load(adaface_models[architecture])[<span class="hljs-string">&#x27;state_dict&#x27;</span>]<br>    model_statedict = &#123;key[<span class="hljs-number">6</span>:]:val <span class="hljs-keyword">for</span> key, val <span class="hljs-keyword">in</span> statedict.items() <span class="hljs-keyword">if</span> key.startswith(<span class="hljs-string">&#x27;model.&#x27;</span>)&#125;<br>    model.load_state_dict(model_statedict)<br>    model.<span class="hljs-built_in">eval</span>()<br>    <span class="hljs-keyword">return</span> model<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">to_input</span>(<span class="hljs-params">pil_rgb_image</span>):<br>    np_img = np.array(pil_rgb_image)<br>    brg_img = ((np_img[:,:,::-<span class="hljs-number">1</span>] / <span class="hljs-number">255.</span>) - <span class="hljs-number">0.5</span>) / <span class="hljs-number">0.5</span><br>    tensor = torch.tensor([brg_img.transpose(<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]).<span class="hljs-built_in">float</span>()<br>    <span class="hljs-keyword">return</span> tensor<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    model = load_pretrained_model(<span class="hljs-string">&#x27;ir_50&#x27;</span>)<br>    feature, norm = model(torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">112</span>,<span class="hljs-number">112</span>))<br><br>    test_image_path = <span class="hljs-string">&#x27;face_alignment/test_images&#x27;</span><br>    features = []<br>    <span class="hljs-keyword">for</span> fname <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(os.listdir(test_image_path)):<br>        path = os.path.join(test_image_path, fname)<br>        aligned_rgb_img = align.get_aligned_face(path)<br>        bgr_tensor_input = to_input(aligned_rgb_img)<br>        feature, _ = model(bgr_tensor_input)<br>        features.append(feature)<br><br>    similarity_scores = torch.cat(features) @ torch.cat(features).T<br>    <span class="hljs-built_in">print</span>(similarity_scores)<br>    <br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stack&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">TreeNode</span><br>&#123;<br>    <span class="hljs-type">int</span> val;<br>    TreeNode *left;<br>    TreeNode *right;<br>    <span class="hljs-built_in">TreeNode</span>() : <span class="hljs-built_in">val</span>(<span class="hljs-number">0</span>), <span class="hljs-built_in">left</span>(<span class="hljs-literal">nullptr</span>), <span class="hljs-built_in">right</span>(<span class="hljs-literal">nullptr</span>) &#123;&#125;<br>    <span class="hljs-built_in">TreeNode</span>(<span class="hljs-type">int</span> x) : <span class="hljs-built_in">val</span>(x), <span class="hljs-built_in">left</span>(<span class="hljs-literal">nullptr</span>), <span class="hljs-built_in">right</span>(<span class="hljs-literal">nullptr</span>) &#123;&#125;<br>    <span class="hljs-built_in">TreeNode</span>(<span class="hljs-type">int</span> x, TreeNode *left, TreeNode *right) : <span class="hljs-built_in">val</span>(x), <span class="hljs-built_in">left</span>(left), <span class="hljs-built_in">right</span>(right) &#123;&#125;<br>&#125;;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">inorderTraversal</span><span class="hljs-params">(TreeNode *root)</span></span><br><span class="hljs-function">    </span>&#123;<br>        vector&lt;<span class="hljs-type">int</span>&gt; res;<br>        stack&lt;TreeNode *&gt; s;<br>        TreeNode *p = root;<br>        <span class="hljs-keyword">while</span> (p || !s.<span class="hljs-built_in">empty</span>())<br>        &#123;<br>            <span class="hljs-keyword">if</span> (p)<br>            &#123;<br>                s.<span class="hljs-built_in">push</span>(p);<br>                p = p-&gt;left;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                TreeNode *temp = s.<span class="hljs-built_in">top</span>();<br>                s.<span class="hljs-built_in">pop</span>();<br>                res.<span class="hljs-built_in">push_back</span>(temp-&gt;val);<br>                p = temp-&gt;right;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br>&#125;;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution2</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">inorderTraversal</span><span class="hljs-params">(TreeNode *root)</span></span><br><span class="hljs-function">    </span>&#123;<br>        vector&lt;<span class="hljs-type">int</span>&gt; res;<br>        stack&lt;TreeNode *&gt; s;<br>        TreeNode *p = root;<br>        <span class="hljs-keyword">while</span> (p || !s.<span class="hljs-built_in">empty</span>())<br>        &#123;<br>            <span class="hljs-keyword">while</span> (p)<br>            &#123;<br>                s.<span class="hljs-built_in">push</span>(p);<br>                p = p-&gt;left;<br>            &#125;<br>            TreeNode *temp = s.<span class="hljs-built_in">top</span>();<br>            s.<span class="hljs-built_in">pop</span>();<br>            res.<span class="hljs-built_in">push_back</span>(temp-&gt;val);<br>            p = temp-&gt;right;<br>        &#125;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
